// Code generated by MockGen. DO NOT EDIT.
// Source: domain/repository/editor.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	model "nova/domain/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIEditorRepository is a mock of IEditorRepository interface.
type MockIEditorRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIEditorRepositoryMockRecorder
}

// MockIEditorRepositoryMockRecorder is the mock recorder for MockIEditorRepository.
type MockIEditorRepositoryMockRecorder struct {
	mock *MockIEditorRepository
}

// NewMockIEditorRepository creates a new mock instance.
func NewMockIEditorRepository(ctrl *gomock.Controller) *MockIEditorRepository {
	mock := &MockIEditorRepository{ctrl: ctrl}
	mock.recorder = &MockIEditorRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIEditorRepository) EXPECT() *MockIEditorRepositoryMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockIEditorRepository) Get() (*model.Editor, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(*model.Editor)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIEditorRepositoryMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIEditorRepository)(nil).Get))
}

// Save mocks base method.
func (m *MockIEditorRepository) Save(editor *model.Editor) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", editor)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockIEditorRepositoryMockRecorder) Save(editor interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockIEditorRepository)(nil).Save), editor)
}

// Update mocks base method.
func (m *MockIEditorRepository) Update(editor *model.Editor) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", editor)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockIEditorRepositoryMockRecorder) Update(editor interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockIEditorRepository)(nil).Update), editor)
}
